@attribute [Authorize]
@page "/portal"

@using Microsoft.AspNetCore.Authorization
@using depot.Shared.RequestModels
@using depot.Shared.ResponseModels


@inject API API
@inject AppState _appState

<h3>Portal</h3>

<table class="table table-hover">
    <tbody>
        @foreach (var Group in Groups)
        {
            <tr>
                <td>
                    <NavLink class="nav-link pointer" href="@($"/Group/{Group.Id}")" @onclick="(() => GroupSelected(Group))">
                        @(Group.Name)
                    </NavLink>
                </td>
                <td width="250">
                    <NavLink @onclick="(() => GroupSelected(Group))" href="@($"/Group/{Group.Id}/settings")" class="float-right mt-1 ml-2 btn btn-success btn-sm">Settings</NavLink>
                    <NavLink @onclick="(() => GroupSelected(Group))" href="@($"/Group/{Group.Id}/design")" class="float-right mt-1 btn btn-primary btn-sm">Data Manager</NavLink>
                </td>
            </tr>
        }
    </tbody>
</table>




<div class="row">
    <NavLink class="mx-auto btn btn-success btn-lg pointer" href="/Group/create">
        <i class="fas fa-plus mx-2"></i> New Group
    </NavLink>
</div>


@code {

    List<ResponseGroupShort> Groups { get; set; } = new List<ResponseGroupShort>();

    async protected override Task OnInitializedAsync()
    {
        Groups = await API.GetGroupsByAuthorizedUser();
    }

    async private Task GroupSelected(ResponseGroupShort Group)
    {
        var orgTypes = await API.GetGroupTypeAsMenuOptionList(Group.Id);
        var userOrgs = await API.GetGroupsByAuthorizedUser();
        List<GroupTypeNav> types = orgTypes.Select(o => new GroupTypeNav() { Text = o.Name, Data = o.Id }).ToList();
        List<AllowedGroup> allowedOrgs = userOrgs.Select(o => new AllowedGroup() { Name = o.Name, Id = o.Id }).ToList();
    }
}
