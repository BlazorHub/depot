@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager
@inject depot.Client.Services.AppState _appState

<AuthorizeView>
    <Authorized>
        <nav class="navbar sticky-top navbar-expand-lg navbar-dark bg-dark">
            <a class="navbar-brand" href="/">depot @if (string.IsNullOrEmpty(_appState.CurrentGroupName) == false) { <span class="d-none d-sm-inline"> <i class="fas fa-angle-right mx-2 header-separator"></i> @_appState.CurrentGroupName</span> }</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navToggle" aria-controls="navToggle" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="navToggle">
                <ul class="navbar-nav ml-md-auto">
                    @if (_appState.DataTypes.Count > 0 || _appState.AllowedGroups.Count > 0)
                    {
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle mr-2" href="#" id="navbarDropdownMenuLink" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <strong><i class="fas fa-search mr-1"></i>Search</strong>
                            </a>
                            <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
                                <div class="dropdown-header">
                                    @_appState.CurrentGroupName
                                </div>
                                @foreach (var type in _appState.DataTypes)
                                {
                                    <NavLink class="dropdown-item" href="@($"group/{_appState.CurrentGroupId}/type/{type.Data}")">
                                        <i class="fas fa-list-ol mr-1"></i> @type.Text
                                    </NavLink>
                                }
                                @if(_appState.DataTypes.Count == 0)
                                {
                                    <div class="dropdown-header">
                                        No data types. Create some!
                                    </div>
                                }
                                @if (_appState.CurrentGroupId != null ? _appState.AllowedGroups.Where(g => g.Id != _appState.CurrentGroupId).Count() > 0 : _appState.AllowedGroups.Count > 0)
                                {
                                    <div class="dropdown-divider"></div>
                                }
                                @foreach (var group in _appState.CurrentGroupId != null ? _appState.AllowedGroups.Where(g => g.Id != _appState.CurrentGroupId) : _appState.AllowedGroups)
                                {
                                    <NavLink class="dropdown-item pointer" href="@($"group/{group.Id}")">
                                        <i class="fas fa-sync mr-1"></i> @group.Name
                                    </NavLink>
                                }

                            </div>
                        </li>
                    }
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle mr-2" href="#" id="navbarDropdownMenuLink" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <i class="fas fa-cogs mr-1"></i> Settings
                        </a>
                        <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
                            <div class="dropdown-header">
                                @_appState.CurrentGroupName
                            </div>
                            @if (_appState.CurrentGroupIsAdministrator)
                            {
                                <NavLink class="dropdown-item" href="@($"group/{_appState.CurrentGroupId}/design")">
                                    <i class="fas fa-tools mr-1"></i> Data Designer
                                </NavLink>
                            }
                            @if (_appState.CurrentGroupId != null && _appState.CurrentGroupIsAdministrator)
                            {
                                <NavLink class="dropdown-item" href="@($"group/{_appState.CurrentGroupId}/settings")">
                                    <i class="fas fa-cog mr-1"></i> Settings
                                </NavLink>
                            }
                            <a class="dropdown-item" href="group">
                                <i class="fas fa-plus mr-1"></i> Create New Group
                            </a>
                        </div>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link mr-2" href="authentication/profile">@context.User.Identity.Name</a>
                    </li>
                    <li class="nav-item">
                        <button class="nav-link btn btn-link" @onclick="BeginSignOut"><i class="fas fa-sign-out-alt mr-1"></i>Log out</button>
                    </li>
                </ul>
            </div>
        </nav>
    </Authorized>
    <NotAuthorized>
        <nav class="navbar sticky-top navbar-expand-lg navbar-dark bg-dark">
            <a class="navbar-brand" href="#">depot</a>
            @*<button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navToggleUnAuth" aria-controls="navToggleUnAuth" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            
            <div class="collapse navbar-collapse" id="navToggleUnAuth">
                <ul class="navbar-nav ml-md-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="authentication/register">Register</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="authentication/login">Log in</a>
                    </li>
                </ul>
            </div>*@
        </nav>
    </NotAuthorized>
</AuthorizeView>

@code{      
    protected override void OnInitialized()
    {
        _appState.OnChange += StateHasChanged;
    }

    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }
}
